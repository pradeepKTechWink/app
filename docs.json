{
    "openapi": "3.0.0",
    "info": {
        "title": "CommunityAI API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:5050",
            "description": "Local Server"
        },
        {
            "url": "http://34.74.95.231:5050",
            "description": "Demo Server"
        }
    ],
    "paths": {
        "/user/register": {
          "post": {
            "tags": [
                "User Registeration"
            ],
            "summary": "Create a new user",
            "description": "Registers a new user account.",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "firstname": {
                        "type": "string",
                        "example": "John",
                        "description": "First name of the user"
                      },
                      "lastname": {
                        "type": "string",
                        "example": "Doe",
                        "description": "Last name of the user"
                      },
                      "email": {
                        "type": "string",
                        "example": "johndoe@gmail.com",
                        "description": "Email address of the user"
                      },
                      "mobileNumber": {
                        "type": "integer",
                        "example": 5555551234,
                        "description": "Mobile number of the user"
                      },
                      "accountType": {
                        "type": "string",
                        "example": "Student",
                        "description": "Type of the account"
                      },
                      "password": {
                        "type": "string",
                        "example": "pass1234",
                        "description": "Password for the user. Use 8 or more characters with a mix of letters, numbers, and symbols"
                      },
                      "companyName": {
                        "type": "string",
                        "example": "alpha",
                        "description": "Name of the company"
                      },
                      "phoneNumber": {
                        "type": "integer",
                        "example": 5555551234,
                        "description": "Phone number of the user or company"
                      },
                      "orgType": {
                        "type": "string",
                        "example": "Management Company",
                        "description": "Organization type can be Management Company, Self Managed Community, or others"
                      },
                      "mailingAddStreetName": {
                        "type": "string",
                        "example": "Main Street",
                        "description": "Street name for mailing address"
                      },
                      "mailingAddCityName": {
                        "type": "string",
                        "example": "San Francisco",
                        "description": "City name for mailing address"
                      },
                      "mailingAddStateName": {
                        "type": "string",
                        "example": "California",
                        "description": "State name for mailing address"
                      },
                      "mailingAddZip": {
                        "type": "integer",
                        "example": 12345,
                        "description": "ZIP code for mailing address"
                      },
                      "billingAddStreetName": {
                        "type": "string",
                        "example": "Main Street",
                        "description": "Street name for billing address"
                      },
                      "billingAddCityName": {
                        "type": "string",
                        "example": "San Francisco",
                        "description": "City name for billing address"
                      },
                      "billingAddStateName": {
                        "type": "string",
                        "example": "California",
                        "description": "State name for billing address"
                      },
                      "billingAddZip": {
                        "type": "string",
                        "example": "12345",
                        "description": "ZIP code for billing address"
                      },
                      "isMailAndBillAddressSame": {
                        "type": "boolean",
                        "description": "Indicates whether the mailing and billing addresses are the same"
                      }
                    },
                    "required": [
                      "firstname",
                      "lastname",
                      "email",
                      "mobileNumber",
                      "accountType",
                      "password",
                      "billingAddStreetName",
                      "billingAddCityName",
                      "billingAddStateName",
                      "billingAddZip"
                    ]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "User Already Registered",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Email already has an account, try with another email"
                    }
                  }
                }
              },
              "201 ": {
                "description": "Server error",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Failed to create a account"
                    }
                  }
                }
              },
              "201": {
                "description": "User registration successful",
                "content": {
                  "application/json": {
                    "example": {
                      "success": true,
                      "sessionURL": "hhtps://checkout.stripe.com/c/pay"
                    }
                  }
                }
              },
              "201  ": {
                "description": "User registration failed",
                "content": {
                  "application/json": {
                    "example": {
                      "success": true,
                      "message": "Account creation failed"
                      
                    }
                  }
                }
              },
              "400": {
                "description": "Server error",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "err"
                    }
                  }
                }
              },
              "400 ": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/user/verify": {
            "post": {
              "tags":["User Registeration"],
              "summary": "Verify user account",
              "description": "Verifies a user's account based on the provided token.",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        },
                        "token": {
                          "type": "integer",
                          "example": 3151,
                          "description": "Authentication token for the user session"
                        }
                      },
                      "required": [
                        "userId",
                        "token"
                      ]
                    }
                  }                  
                }
              },
              "responses": {
                "200 ": {
                  "description": "Account verification result",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": true,
                        "message": "Account verification complete"
                      }
                    }
                  }
                },
                "200": {
                  "description": "Account verification error",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Account verification failed"
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Verification link expired",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Verification link expired"
                      }
                    }
                  }
                },
                "200   ": {
                  "description": "Invalid verification link",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Invalid verification link"
                      }
                    }
                  }
                },
                "200    ": {
                  "description": "Error",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Account verification failed"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/user/resend-verification-link": {
            "post": {
              "tags": ["User Profile"],
              "summary": "Resend Verification Mail",
              "description": "Endpoint to resend a verification email.",
              "requestBody": {
                "description": "Request body for resending a verification email.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        }
                      },
                      "required": ["userId"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response.",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": true,
                        "message": "Verification link sent successfully"
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Failed to send verification link",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Failed to send verification link"
                      }
                    }
                  }
                },
                "401": {
                  "description": "No token supplied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "No token supplied"
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Token Invalid"
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "Access denied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Access denied."
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/user/login": {
            "post": {
              "tags": ["User Login"],
              "summary": "Validate Login Credentials",
              "description": "Endpoint to validate user login credentials and provide authentication tokens.",
              "requestBody": {
                "description": "Request body for validating login credentials.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "johndoe@gmail.com",
                          "description": "Email address of the user"
                        },
                        "password": {
                          "type": "string",
                          "example": "pass1234",
                          "description": "Password for the user"
                        }
                      },
                      "required":["email", "password"]
                    }
                  }                  
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Authentication Success"
                          },
                          "userData": {
                            "type": "object",  
                            "example":{
                              "id": "number",
                              "firstname": "string",
                              "lastname": "string",
                              "email": "string",
                              "accountStatus": "boolean",
                              "mobileNumber": "string",
                              "accountLockStatus": "boolean",
                              "avatarName": "string",
                              "twoFactorAuth": "boolean",
                              "accountBlocked": "boolean",
                              "companyId": "number",
                              "phoneNumber": "string",
                              "companyName": "string",
                              "orgType": "string",
                              "mailingAddress": {
                                "addressLine": "string",
                                "city": "string",
                                "state": "string",
                                "postCode": "string"
                              },
                              "billingAddress": {
                                "addressLine": "string",
                                "city": "string",
                                "state": "string",
                                "postCode": "string"
                              },
                              "companyLogo": "string",
                              "companytwoFactorAuth": "boolean",
                              "isMailAndBillAddressSame": "boolean",
                              "auth": {
                                "api_token": "string"
                              },
                              "role": "number"
                            }
                          },
                          "twoFactorAuth": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                    "description": "Valid credential",
                    "content": {
                      "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                              "success": {
                                "type": "boolean"
                              },
                              "message": {
                                "type": "string",
                                "example": "Valid credential"
                              },
                              "twoFactorAuth": {
                                "type": "boolean"
                              }
                            }
                        }
                      }
                    }
                },
                "200   ": {
                    "description": "Invalid credential provided",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Invalid credential provided"
                        }
                      }
                    }
                },
                "200    ": {
                    "description": "Your account have been deleted",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Your account have been deleted"
                        }
                      }
                    }
                },
                "200     ": {
                    "description": "Your account has been locked, try again later",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Your account has been locked, try again later"
                        }
                      }
                    }
                },
                "200      ": {
                    "description": "Invalid credentials",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Invalid credentials"
                        }
                      }
                    }
                },
                "200       ": {
                    "description": "Login Failed",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Login Failed"
                        }
                      }
                    }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/user/submit-otp": {
            "post": {
              "tags": ["User Login"],
              "summary": "Validate OTP and Authenticate User",
              "description": "Endpoint to validate user login credentials and OTP, and provide authentication tokens.",
              "requestBody": {
                "description": "Request body for validating login credentials and OTP.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example":"johndoe@gmail.com",
                          "description": "Email address of the user"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password for the user",
                          "example": "pass1234"
                        },
                        "otp": {
                          "type": "string",
                          "description": "One-time password for authentication",
                          "example": 1234
                        }
                      },
                      "required":["email", "password", "otp"]
                    }
                  }                  
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Authentication Success"
                          },
                          "userData": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "firstname": "string",
                              "lastname": "string",
                              "email": "string",
                              "accountStatus": "boolean",
                              "mobileNumber": "number",
                              "accountLockStatus": "boolean",
                              "avatarName": "string",
                              "twoFactorAuth": "boolean",
                              "accountBlocked": "boolean",
                              "companyId": "number",
                              "phoneNumber": "string",
                              "companyName": "string",
                              "orgType": "string",
                              "mailingAddress": {
                                "addressLine": "string",
                                "city": "string",
                                "state": "string",
                                "postCode": "string"
                              },
                              "billingAddress": {
                                "addressLine": "string",
                                "city": "string",
                                "state": "string",
                                "postCode": "string"
                              },
                              "companyLogo": "string",
                              "companytwoFactorAuth": "boolean",
                              "isMailAndBillAddressSame": "boolean",
                              "auth": {
                                "api_token": "string"
                              },
                              "role": "number"
                            }  
                          },
                          "twoFactorAuth": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                    "description": "Login Failed",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Login Failed"
                        }
                      }
                    }
                },
                "200  ": {
                    "description": "Your account have been deleted",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Your account have been deleted"
                        }
                      }
                    }
                },
                "201 ": {
                    "description": "Your OTP expired",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Your OTP expired"
                        }
                      }
                    }
                },
                "201  ": {
                    "description": "Invalid OTP",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Invalid OTP"
                        }
                      }
                    }
                },
                "201   ": {
                    "description": "Your account has been locked due to multiple incorrect OTP attempt, try again later",
                    "content": {
                      "application/json": {
                        "example": {
                          "success": false,
                          "message": "Your account has been locked due to multiple incorrect OTP attempt, try again later"
                        }
                      }
                    }
                },
                "201": {
                  "description": "Invalid credential",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example":"Invalid credential"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/user/forgot_password": {
            "post": {
              "tags": ["User Login"],
              "summary": "Send Reset Password Link",
              "description": "Endpoint to send a password reset link to the user's email address.",
              "requestBody": {
                "description": "Request body for sending a password reset link.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the user",
                          "example":"johndoe@gmail.com"
                        }
                      },
                      "required":["email"]
                    }
                  }                  
                }
              },
              "responses": {
                "200 ": {
                  "description": "Successful response when the email exists in the records.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Reset password link sent successfully to your email"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Failed to send reset password link",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to send reset password link"
                          }
                        }
                      }
                    }
                  }
                },
                "200": {
                  "description": "Alternate response when the email doesn't exist in the records.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email doesn't exist in our record"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/user/reset-password": {
            "post": {
              "tags": ["User Login"],
              "summary": "Reset Password",
              "description": "Endpoint to reset a user's password using a reset token.",
              "requestBody": {
                "description": "Request body for resetting the password.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Email address of the user",
                          "example":"johndoe@gmail.com"
                        },
                        "token": {
                          "type": "string",
                          "example": 12345,
                          "description": "Authentication token for the user session"
                        },
                        "password": {
                          "type": "string",
                          "example": "pass1234",
                          "description": "Password for the user"
                        }
                      },
                      "required": ["email", "token", "password"]
                    }
                  }
                  
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response when the password change is successful.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Password changed successfully"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Response when request failed.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to change password"
                          }
                        }
                      }
                    }
                  }
                },
                "200   ": {
                  "description": "Response when token is Invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid link provided"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Response when the password reset link is expired.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Password reset link expired"
                          }
                        }
                      }
                    }
                  }
                },
                "200    ": {
                  "description": "Internal server error response in case of unexpected issues.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/profile/change-password": {
            "post": {
              "tags": ["User Profile"],
              "summary": "Change Current Password",
              "description": "Endpoint to change the user's current password.",
              "requestBody": {
                "description": "Request body for changing the current password.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        },
                        "currentPassword": {
                          "type": "string",
                          "description": "User's current password",
                          "example": "pass1234"
                        },
                        "newPassword": {
                          "type": "string",
                          "description": "User's new password",
                          "example": "1234pass"
                        }
                      },
                      "required": ["userId", "currentPassword", "newPassword"]
                    }
                  }                  
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response when the password change is successful.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Password updated successfully"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Response when the provided current password is invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example":"Password is invalid"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Internal server error response in case of unexpected issues.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to update password"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "No token supplied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "No token supplied"
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Token Invalid"
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "Access denied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Access denied."
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/profile/update-email": {
            "post": {
              "tags": ["User Profile"],
              "summary": "Update Email",
              "description": "Endpoint to update the user's email and send a verification link.",
              "requestBody": {
                "description": "Request body for updating the email.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        },
                        "newEmail": {
                          "type": "string",
                          "description": "User's new email address",
                          "example": "johndoe@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "description": "User's password for authentication",
                          "example": "pass1234"
                        }
                      },
                      "required": ["userId", "newEmail", "password"]
                    }
                  }                  
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response when the email is updated successfully, and a verification link is sent.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email updated successfully and a verification link have been sent to your inbox"
                          },
                          "email": {
                            "type": "string"
                          },
                          "accountStatus": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Response when the provided password is invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example":"Password is invalid"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Response when the new email is the same as the old one.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example":"Cannot update, new email is same as the old one"
                          }
                        }
                      }
                    }
                  }
                },
                "200   ": {
                  "description": "Internal server error response in case of unexpected issues.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to update email"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "No token supplied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "No token supplied"
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Token Invalid"
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "Access denied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Access denied."
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/profile/enable-2fa": {
            "post": {
              "tags": ["User Profile"],
              "summary": "Enable Two Factor Authentication",
              "description": "Endpoint to enable two-factor authentication for the user.",
              "requestBody": {
                "description": "Request body for enabling two-factor authentication.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        }
                      },
                      "required": ["userId"]
                    }
                  }                  
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response when two-factor authentication is enabled successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Fail response when two-factor authentication is not enabled successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example":false
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to enable two factor authentication"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Internal server error response in case of unexpected issues.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example":false
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "No token supplied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "No token supplied"
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Token Invalid"
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "Access denied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Access denied."
                      }
                    }
                  }
                },
                "401    ": {
                  "description": "Account not verified",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Account not verified, verify your account to use 2FA"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/profile/disable-2fa": {
            "post": {
              "tags": ["User Profile"],
              "summary": "Disable Two Factor Authentication",
              "description": "Endpoint to disable two-factor authentication for the user.",
              "requestBody": {
                "description": "Request body for disabling two-factor authentication.",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "example": 1,
                          "description": "Unique identifier for the user"
                        }
                      },
                      "required": ["userId"]
                    }
                  }                  
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response when two-factor authentication is disabled successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example":"Two factor authentication disabled"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Fail response when two-factor authentication is not disabled successfully.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example":false
                          },
                          "message": {
                            "type": "string",
                            "example":"Fail to disable Two factor authentication"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Internal server error response in case of unexpected issues.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example":false
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "No token supplied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "No token supplied"
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Token Invalid"
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "Access denied.",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Access denied."
                      }
                    }
                  }
                },
                "401    ": {
                  "description": "Account not verified",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Account not verified, verify your account to use 2FA"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
        },
        "/profile/enable-company-2fa": {
          "post": {
            "tags": ["Company Profile"],
            "summary": "Enable two-factor authentication for a company and its users.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "example": 1,
                        "description": "Unique identifier for the user"
                      },
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "Unique identifier for the company"
                      }
                    },
                    "required": ["userId", "companyId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Two factor authentication enabled for company and for all of its users"
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Two factor authentication enabled for company but failed to enable for its users",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Two factor authentication enabled for company but failed to enable for its users"
                        }
                      }
                    }

                  }
                }
              },
              "200  ": {
                "description": "Failed to enable two factor authentication for company",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to enable two factor authentication for company"
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description": "Admin Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "No token supplied.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "No token supplied"
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Token Invalid"
                    }
                  }
                }
              },
              "401   ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/profile/disable-company-2fa": {
          "post": {
            "tags": ["Company Profile"],
            "summary": "Disable Company Two Factor Authentication",
            "description": "Disables two factor authentication for a company and its users.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the company for which 2FA should be disabled."
                      }
                    },
                    "required":["companyId"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Two factor authentication disabled for company and for all of its users"
                        }
                      }
                    }
                  }

                  }
                },
              "200 ": {
                "description": "Two factor authentication disabled for company but failed to disable for its users",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Two factor authentication disabled for company but failed to disable for its users"
                        }
                      }
                    }

                  }
                }
              },
              "200  ": {
                "description": "Failed to disable two factor authentication for company",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to disable two factor authentication for company"
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description": "No token supplied.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "No token supplied"
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Token Invalid"
                    }
                  }
                }
              },
              "401  ": {
                "description": "Admin Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/invitation/send": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Send Invitation",
            "description": "Send an invitation to a user.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "johndoe@gmail.com",
                        "description": "The email address of the user to invite."
                      },
                      "senderId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the sender."
                      },
                      "role": {
                        "type": "integer",
                        "example": 1,
                        "description": "The role of the invited user. 1 for Administrator, 2 for User, and 3 for View Only."
                      },
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the company to which the user is invited."
                      }
                    },
                    "required": ["email", "senderId", "role", "companyId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Account already exist for the email",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the invitation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Cannot send invitation, account already exist for the email"
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Invitation sent successfully",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the invitation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation sent successfully"
                        }
                      }
                    }

                  }
                }
              },
              "200  ": {
                "description": "Failed to send invitation",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the invitation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to send invitation"
                        }
                      }
                    }
                    
                  }
                }
              },
              "200   ": {
                "description": "Invitation already sent, delete that and try again",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the invitation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation already sent, delete that and try again"
                        }
                      }
                    }
                    
                  }
                }
                
              },
              "401": {
                "description": "No token supplied.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "No token supplied"
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Token Invalid"
                    }
                  }
                }
              },
              "401  ": {
                "description": "Admin Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401   ": {
                "description": "Invalid role",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid role provided"
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/invitation/list": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Get Invitation List",
            "description": "Retrieve a list of invitations.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "searchString": {
                        "type": "string",
                        "description": "A search string to filter invitations (optional)."
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The offset for paginating the list."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of invitations to return per page."
                      },
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The ID of the company for which to retrieve invitations."
                      }
                    },
                    "required": ["companyId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "invitationList": {
                          "type": "array",
                          "description": "A list of invitation records.",
                          "example": [
                            {
                              "id": "number",
                              "sender": "number",
                              "userId": "number",
                              "company": "number",
                              "email": "string",
                              "role": "number",
                              "status": "string",
                              "token": "number",
                              "token_issued": "number",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean"
                            }
                          ]
                        },
                        "totalPageNum": {
                          "type": "integer",
                          "description": "The total number of pages for paginating the list."
                        },
                        "noOfRecords": {
                          "type": "integer",
                          "description": "The total number of invitation records."
                        }
                      }
                    }

                  }
                }
              },
              "200   ": {
                "description": "Failed to fetch invitation list",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to fetch invitation list"
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description": "No token supplied.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "No token supplied"
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Token Invalid"
                    }
                  }
                }
              },
              "401  ": {
                "description": "Admin Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/invitation/get": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Get Invitation Data",
            "description": "Retrieve invitation details by email and token.",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "johndoe@gmail.com",
                        "description": "The email address of the invited user."
                      },
                      "token": {
                        "type": "integer",
                        "description": "The token associated with the invitation.",
                        "example": 12345
                      }
                    },
                    "required": ["email", "token"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"valid",
                          "description": "The status of the invitation (valid, invalid-token, expired, declined, registered, invalid)."
                        },
                        "invitationData": {
                          "type": "object",
                          "example":{
                            "id": "number",
                            "sender": "number",
                            "userId": "number",
                            "company": "number",
                            "email": "string",
                            "role": "number",
                            "status": "string",
                            "token": "number",
                            "token_issued": "number",
                            "created": "object",
                            "updated": "object"
                          },
                          "description": "Details of the invitation (if status is 'valid')."
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description": " invalid-token",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "invalid-token"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": " expired",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "expired"
                        }
                      }
                    }
                  }
                }
              },
              "200   ": {
                "description": " declined",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "declined"
                        }
                      }
                    }
                  }
                }
              }, 
              "200    ": {
                "description": " registered",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "registered"
                        }
                      }
                    }
                  }
                }
              },
              "200     ": {
                "description": " invalid",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "invalid"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        
        "/invitation/delete": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Delete Invitation",
            "description": "Delete an invitation by its ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "invitationId": {
                        "type": "integer",
                        "description": "The ID of the invitation to be deleted.",
                        "example": 1
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of invitations to return per page."
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company for which to retrieve invitations.",
                        "example": 1
                      }
                    },
                    "required":["invitationId", "companyId"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{

                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Indicates the success of the operation."
                      },
                      "invitationList": {
                        "type": "array",
                        "description": "A list of invitation records after deletion.",
                        "example": [
                          {
                            "id": "number",
                            "sender": "number",
                            "userId": "number",
                            "company": "number",
                            "email": "string",
                            "role": "number",
                            "status": "string",
                            "token": "number",
                            "token_issued": "number",
                            "created": "object",
                            "updated": "object",
                            "selected": "boolean"
                          }
                        ]
                      },
                      "totalPageNum": {
                        "type": "integer",
                        "description": "The total number of pages for paginating the list after deletion."
                      },
                      "noOfRecords": {
                        "type": "integer",
                        "description": "The total number of invitation records after deletion."
                      },
                      "message": {
                        "type": "string",
                        "example": "User deleted successfully",
                        "description": "A message indicating the result of the delete operation."
                      }
                    }
                  }
                  }
                }
              },
              "200  ": {
                "description": "User deleted successfully, but failed to fetch updated invitation list",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "User deleted successfully, but failed to fetch updated invitation list"
                        }
                      }
                    }
                  }
                }
              },
              "200   ": {
                "description": "Failed to delete invitations",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to delete invitations"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401   ": {
                "description": "Invalid Invitation",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid invitationId provided"
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/invitation/resend": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Resend Invitation",
            "description": "Resend an invitation to a user.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the user to invite.",
                        "example": "johndoe@gmail.com"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The offset for paginating the list."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of invitations to return per page."
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company for which to retrieve invitations.",
                        "example": 1
                      }
                    },
                    "required":["companyId", "email"]
                  }
                }
              }
            },
           
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "invitationList": {
                          "type": "array",
                          "description": "A list of invitation records after resend.",
                          "example": [
                            {
                              "id": "number",
                              "sender": "number",
                              "userId": "number",
                              "company": "number",
                              "email": "string",
                              "role": "number",
                              "status": "string",
                              "token": "number",
                              "token_issued": "number",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean"
                            }
                          ]
                        },
                        "totalPageNum": {
                          "type": "integer",
                          "description": "The total number of pages for paginating the list after resend."
                        },
                        "noOfRecords": {
                          "type": "integer",
                          "description": "The total number of invitation records after resend."
                        },
                        "message": {
                          "type": "string",
                          "example":"Invitation sent successfully",
                          "description": "A message indicating the result of the resend operation."
                        }
                      }
                    }

                  }
                }
              },
              "200  ": {
                "description": "Cannot send invitation, account already registered for this email",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Cannot send invitation, account already registered for this email"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Failed to send invitation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to send invitation"
                        }
                      }
                    }
                  }
                }
              },
              "200   ": {
                "description": "Failed to send invitation, invitation already registered",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to send invitation, invitation already registered"
                        }
                      }
                    }
                  }
                }
              },
              "200    ": {
                "description": "Invitation not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation not found"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/user/create-account-for-invited-user": {
          "post": {
            "tags": ["User Registeration"],
            "summary": "Create Account for Invited User",
            "description": "Create an account for an invited user using their invitation token.",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address of the invited user.",
                        "example": "johndoe@gmail.com"
                      },
                      "token": {
                        "type": "string",
                        "example": 12345,
                        "description": "The token associated with the invitation."
                      },
                      "firstname": {
                        "type": "string",
                        "example": "John",
                        "description": "The first name of the user."
                      },
                      "lastname": {
                        "type": "string",
                        "example": "Doe",
                        "description": "The last name of the user."
                      },
                      "mobileNumber": {
                        "type": "string",
                        "example": 5555551234,
                        "description": "The mobile number of the user."
                      },
                      "password": {
                        "type": "string",
                        "example": "pass1234",
                        "description": "The password chosen by the user."
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company for which the user is being invited.",
                        "example": 1
                      },
                      "role": {
                        "type": "integer",
                        "description": "The role of the user within the company.",
                        "example": 1
                      }
                    },
                    "required":["role", "companyId","password","token","email", "mobileNumber", "lastname", "firstname"]
                  }
                }
              }
            },
            
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{

                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Authentication Success",
                          "description": "A message indicating the result of the account creation."
                        },
                        "userData": {
                          "type": "object",
                          "description": "Details of the user's account (if created successfully).",
                          "example":{
                            "id": "number",
                            "firstname": "naman",
                            "lastname": "string",
                            "email": "string",
                            "accountStatus": "boolean",
                            "mobileNumber": "string",
                            "accountLockStatus": "boolean",
                            "avatarName": "string",
                            "twoFactorAuth": "boolean",
                            "accountBlocked": "boolean",
                            "companyId": "number",
                            "phoneNumber": "string",
                            "companyName": "string",
                            "orgType": "string",
                            "mailingAddress": {
                              "addressLine": "string",
                              "city": "string",
                              "state": "string",
                              "postCode": "string"
                            },
                            "billingAddress": {
                              "addressLine": "string",
                              "city": "string",
                              "state": "string",
                              "postCode": "string"
                            },
                            "companyLogo": "string",
                            "companytwoFactorAuth": "boolean",
                            "isMailAndBillAddressSame": "boolean",
                            "auth": {
                              "api_token": "string"
                            },
                            "role": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Account creation failed",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Account creation failed"
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description": "Account creation failed due to invalid company",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Account creation failed due to invalid company"
                        }
                      }
                    }
                  }
                }
              },
              "200   ": {
                "description": "Invalid token provided",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid token provided"
                        }
                      }
                    }
                  }
                }
              },
              "200    ": {
                "description": "Invitation expired",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation expired"
                        }
                      }
                    }
                  }
                }
              },
              "200     ": {
                "description": "This invitation have already been declined",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "This invitation have already been declined"
                        }
                      }
                    }
                  }
                }
              },
              "200      ": {
                "description": "Account already registered with this invitation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Account already registered with this invitation"
                        }
                      }
                    }
                  }
                }
              },
              "200       ": {
                "description": "Invalid invitation provided",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid invitation provided"
                        }
                      }
                    }
                  }
                }
              },
              "401   ": {
                "description": "Invalid role",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid role provided"
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/invitation/decline": {
          "post": {
            "tags": ["User Invitation"],
            "summary": "Decline Invitation",
            "description": "Decline an invitation using the provided email and token.",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the invitation.",
                        "example": "johndoe@gmail.com"
                      },
                      "token": {
                        "type": "string",
                        "example": 12345,
                        "description": "The token associated with the invitation."
                      }
                    },
                    "required": ["email", "token"]
                  }
                }                
              }
            },
            
            "responses": {
              "200": {
                "description": "Fail",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"failed",
                          "description": "Status of the invitation after declining."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to decline invitation",
                          "description": "A message indicating the result of declining the invitation."
                        }
                      }
                    }

                  }
                }
              },
              "200       ": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Invitation declined",
                          "description": "A message indicating the result of declining the invitation."
                        }
                      }
                    }

                  }
                }
              },
              "200  ": {
                "description":"invalid-token",
                "content": {
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"invalid-token",
                          "description": "invalid-token"
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to decline invitation, invalid token provided"
                        }
                      }
                    }

                  }
                }
              },
              "200   ": {
                "description":"Invitation expired",
                "content": {
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"expired",
                          "description": "expired"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation expired"
                        }
                      }
                    }

                  }
                }
              },
              "200    ": {
                "description":"Invitation link already declined",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation.",
                          "example": false
                        },
                        "status": {
                          "type": "string",
                          "example":"declined",
                          "description": "declined"
                        },
                        "message": {
                          "type": "string",
                          "example": "This invitation have already been declined"
                        }
                      }
                    }

                  }
                }
              },
              "200     ": {
                "description":"Account already registered with this invitation",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"registered",
                          "description": "registered"
                        },
                        "message": {
                          "type": "string",
                          "example": "Account already registered with this invitation"
                        }
                      }
                    }

                  }
                }
              },
              "200      ": {
                "description":"Invalid invitation provided",
                "content": {
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "status": {
                          "type": "string",
                          "example":"invalid",
                          "description": "invalid"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid invitation provided"
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Invitation declined",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates whether the operation was successful."
                        },
                        "message": {
                          "type": "string",
                          "example": "Invitation declined"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/get-user-detail": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Get User Details for Admin",
            "description": "Retrieve user details, including role, for an admin by their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the user for whom details are requested.",
                        "example": 1
                      }
                    },
                    "required":["userId"]
                  }
                }
              }
            },
            
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"User data fetched successfully",
                          "description": "A message indicating the result of the request."
                        },
                        "userData": {
                          "type": "object",
                          "description": "User data, including their role.",
                          "example": {
                            "id": "number",
                            "firstname": "string",
                            "lastname": "string",
                            "email": "string",
                            "accountStatus": "boolean",
                            "mobileNumber": "number",
                            "accountLockStatus": "boolean",
                            "avatarName": "string",
                            "twoFactorAuth": "boolean",
                            "accountBlocked": "boolean",
                            "role": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "User data fetched successfully, but failed to fetch role data",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "User data fetched successfully, but failed to fetch role data"
                        },
                        "userData": {
                          "type": "object",
                          "description": "User data, including their role.",
                          "example": {
                            "id": "number",
                            "firstname": "string",
                            "lastname": "string",
                            "email": "string",
                            "accountStatus": "boolean",
                            "mobileNumber": "number",
                            "accountLockStatus": "boolean",
                            "avatarName": "string",
                            "twoFactorAuth": "boolean",
                            "accountBlocked": "boolean",
                            "role": "number"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description":"Failed to fetch user data",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to fetch user data"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/verify-account": {
          "post": {
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "tags": ["Admin Dashboard"],
            "summary": "Verify User Account for Admin",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "ID of the user to verify their account",
                        "example": 1
                      }
                    },
                    "required": ["userId"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the account verification"
                        },
                        "message": {
                          "type": "string",
                          "example": "Account verification complete",
                          "description": "A message describing the outcome of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Account verification failed",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the failure of the account verification"
                        },
                        "message": {
                          "type": "string",
                          "example": "Account verification failed",
                          "description": "A message describing the failure of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/enable-user-2fa": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Enable Two-Factor Authentication for Admin",
            "description": "Enable two-factor authentication for an admin user by their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the admin user for whom two-factor authentication is to be enabled.",
                        "example": 1
                      }
                    },
                    "required":["userId"]
                  }
                }
              }
            },
            
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Two factor authentication enabled",
                          "description": "A message indicating the result of enabling two-factor authentication."
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Failed to enable two factor authentication",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to enable two factor authentication",
                          "description": "A message indicating the result of enabling two-factor authentication."
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/disable-user-2fa": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Disable Two-Factor Authentication for Admin",
            "description": "Disable two-factor authentication for an admin user by their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the admin user for whom two-factor authentication is to be disabled.",
                        "example": 1
                      }
                    },
                    "required":["userId"]
                  }
                }
              }
            },
            
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Two factor authentication disabled"
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Failed to disable two factor authentication",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to disable two factor authentication"
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/change-lock-status": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "User Lock and Unlock Option for Admin",
            "description": "Lock or unlock a user account for an admin by their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the user for whom the account status is to be changed.",
                        "example": 1
                      },
                      "status": {
                        "type": "integer",
                        "description": "The status to set for the user account ('1' for locked, '0' for unlocked)."
                      }
                    },
                    "required": ["userId", "status"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "User account locked successfully",
                          "description": "A message indicating the result of changing the account status."
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "User account unlocked successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "User account unlocked successfully",
                          "description": "A message indicating the result of changing the account status."
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description": "Failed to change account status",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to change account status",
                          "description": "A message indicating the result of changing the account status."
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Admin Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/change-password": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Admin Update Password Option for User",
            "description": "Update the password of a user by an admin using their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the user for whom the password is to be updated.",
                        "example": 1
                      },
                      "newPassword": {
                        "type": "string",
                        "example": "pass1234",
                        "description": "The new password to set for the user."
                      }
                    },
                    "required":["userId", "newPassword"]
                  }
                }
              }
            },
           
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Password updated successfully for user",
                          "description": "A message indicating the result of updating the user's password."
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Failed to update password for user",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to update password for user",
                          "description": "A message indicating the result of updating the user's password."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/blacklist-user": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Blacklist User Account",
            "description": "Blacklist a user's account using their user ID.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the user whose account is to be blacklisted.",
                        "example": 1
                      }
                    },
                    "required":["userId"]
                  }
                }
              }
            },
           
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Account blacklisted successfully",
                          "description": "A message indicating the result of blacklisting the user's account."
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Failed to blacklist the account",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to blacklist the account",
                          "description": "A message indicating the result of blacklisting the user's account."
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              }, 
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/admin/whitelist-user": {
          "post": {
            "tags": ["Admin Dashboard"],
            "summary": "Whitelist User Account",
            "description": "Whitelist a user's account using their user ID.",
            "security":[
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "The ID of the user whose account is to be whitelisted.",
                        "example": 1
                      }
                    },
                    "required":["userId"]
                  }
                }
              }
            },
           
            "responses": {
              "200": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Account whitelisted successfully",
                          "description": "A message indicating the result of whitelisting the user's account."
                        }
                      }
                    }

                  }
                }
              },
              "200 ": {
                "description": "Failed to whitelist the account",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example":false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Failed to whitelist the account",
                          "description": "A message indicating the result of whitelisting the user's account."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/create": {
          "post": {
            "tags": ["Community"],
            "summary": "Create New Community",
            "description": "Create a new community with the specified details.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityName": {
                        "type": "string",
                        "example": "Artificial Intelligence",
                        "description": "The name of the community."
                      },
                      "communityAlias": {
                        "type": "string",
                        "example": "AI-1",
                        "description": "The alias of the community."
                      },
                      "streetName": {
                        "type": "string",
                        "example": "Main Street",
                        "description": "The street name of the community's address."
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the community's address.",
                        "example": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "The state of the community's address.",
                        "example": "San Francisco"
                      },
                      "zipcode": {
                        "type": "integer",
                        "example": 12345,
                        "description": "The ZIP code of the community's address."
                      },
                      "creator": {
                        "type": "integer",
                        "description": "The ID of the creator of the community.",
                        "example": 1
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company associated with the community.",
                        "example": 1
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The offset for fetching the community list (optional)."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit for fetching the community list (optional)."
                      }
                    },
                    "required":["companyId","creator", "communityName", "communityAlias"]
                  }
                }
              }
            },
            
            "responses": {
              "201": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "description": "A message indicating the result of creating the community."
                        },
                        "communityList": {
                          "type": "array",
                          "example":[
                            {
                              "id": "number",
                              "companyId": "number",
                              "creator": "number",
                              "community_name": "string",
                              "community_alias": "string",
                              "active": "number",
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "zipcode": "string",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean",
                              "noOfFiles": "number"
                            }
                          ],
                          "description": "A list of communities including the newly created one."
                        },
                        "totalPageNum": {
                          "type": "integer",
                          "description": "The total number of pages available in the community list."
                        },
                        "noOfRecords": {
                          "type": "integer",
                          "description": "The total number of records in the community list."
                        },
                        "activeCommunities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example": {
                              "id": "number",
                              "companyId": "number",
                              "creator": "number",
                              "community_name": "string",
                              "community_alias": "string",
                              "active": "number",
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "zipcode": "number",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean"
                            }
                          },
                          "description": "A list of active communities."
                        }
                      }
                    }

                  }
                }
              },
              "201 ": {
                "description":"Community created successfully, but failed to fetch the updated list, please reload the page.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Community created successfully, but failed to fetch the updated list, please reload the page."
                        }
                      }
                    }

                  }
                }
              },
              "201  ": {
                "description":"Failed to create community",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to create community."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid Creator",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Incorrect creator Id provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/update": {
          "post": {
            "tags": ["Community"],
            "summary": "Update Community",
            "description": "Update an existing community with the specified details.",
            "security":[
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityName": {
                        "type": "string",
                        "example": "Artificial Intelligence",
                        "description": "The name of the community."
                      },
                      "communityAlias": {
                        "type": "string",
                        "example": "AI-1",
                        "description": "The alias of the community."
                      },
                      "streetName": {
                        "type": "string",
                        "example": "Main Street",
                        "description": "The street name of the community's address."
                      },
                      "city": {
                        "type": "string",
                        "example": "San Francisco",
                        "description": "The city of the community's address."
                      },
                      "state": {
                        "type": "string",
                        "example": "California",
                        "description": "The state of the community's address."
                      },
                      "zipcode": {
                        "type": "string",
                        "description": "The ZIP code of the community's address."
                      },
                      "communityId": {
                        "type": "integer",
                        "description": "The ID of the community to be updated.",
                        "example": 1
                      },
                      "searchString": {
                        "type": "string",
                        "description": "A search string for filtering the community list (optional)."
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The offset for fetching the community list (optional)."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit for fetching the community list (optional)."
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company associated with the community.",
                        "example": 1
                      }
                    },
                    "required":["companyId", "communityId", "communityName", "communityAlias"]
                  }
                }
              }
            },
            
            "responses": {
              "201": {
                "description": "Success",
                "content":{
                  "application/json":{

                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example":"Community updated successfully",
                          "description": "A message indicating the result of updating the community."
                        },
                        "communityList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":[
                              {
                                "id": "number",
                                "companyId": "number",
                                "creator": "number",
                                "community_name": "string",
                                "community_alias": "string",
                                "active": "number",
                                "street": "string",
                                "city": "string",
                                "state": "string",
                                "zipcode": "string",
                                "created": "object",
                                "updated": "object",
                                "selected": "boolean",
                                "noOfFiles": "number"
                              }
                            ]
                          },
                          "description": "A list of communities, including the updated one."
                        },
                        "totalPageNum": {
                          "type": "integer",
                          "description": "The total number of pages available in the community list."
                        },
                        "noOfRecords": {
                          "type": "integer",
                          "description": "The total number of records in the community list."
                        },
                        "activeCommunities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example": {
                              "id": "number",
                              "companyId": "number",
                              "creator": "number",
                              "community_name": "string",
                              "community_alias": "string",
                              "active": "number",
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "zipcode": "number",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean"
                            }
                          },
                          "description": "A list of active communities."
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description":"Community updated successfully, but failed the fetch the updated list.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Community updated successfully, but failed the fetch the updated list."
                        }
                      }
                    }

                  }
                }
              },
              "201  ": {
                "description":"Failed to update community.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to update community."
                        }
                      }
                    }

                  }
                }
              },
              "201   ": {
                "description":"Failed to update community, cannot rename old directory",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to update community, cannot rename old directory."
                        }
                      }
                    }

                  }
                }
              },
              "201    ": {
                "description":"Failed to update community",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to update community."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/check-alias-exist": {
          "post": {
            "tags": ["Community"],
            "summary": "Check Alias Availability",
            "description": "Check if the given community alias is already taken.",
            "security":[
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "alias": {
                        "type": "string",
                        "example": "Artificial Intelligence",
                        "description": "The community alias to be checked for availability."
                      }
                    },
                    "required":["alias"]
                  }
                }
              }
            },
            
            "responses": {
              "201": {
                "description": "Success",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "exist": {
                          "type": "boolean",
                          "description": "Indicates whether the alias is already taken (true) or not (false)."
                        }
                      }
                    }

                  }
                }
              },
              "201  ": {
                "description": "Alias does not exists",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation."
                        },
                        "exist": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }

                  }
                }
              },
              "201 ": {
                "description":"Error",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/get": {
          "post": {
            "tags": ["Community"],
            "summary": "Get Community List",
            "description": "Retrieve a list of communities.",
            "security":[
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter communities by alias or name."
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The offset for paginating the results."
                      },
                      "limit": {
                        "type": "integer",
                        "example": 1,
                        "description": "The maximum number of results to return."
                      },
                      "companyId": {
                        "type": "integer",
                        "description": "The ID of the company associated with the communities.",
                        "example": 1
                      }
                    },
                    "required":["companyId"]
                  }
                }
              }
            },
            
            "responses": {
              "201": {
                "description": "Success",
                "content":{
                  "application/json":{

                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Indicates the success of the operation."
                      },
                      "message": {
                        "type": "string",
                        "description": "A message describing the outcome of the operation."
                      },
                      "communityList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "example":{
                            "id": "number",
                            "companyId": "number",
                            "creator": "number",
                            "community_name": "string",
                            "community_alias": "string",
                            "active": "number",
                            "street": "string",
                            "city": "string",
                            "state": "string",
                            "zipcode": "string",
                            "created": "object",
                            "updated": "object",
                            "selected": "boolean",
                            "noOfFiles": "number"
                          }
                        },
                        "description": "The list of communities."
                      },
                      "totalPageNum": {
                        "type": "integer",
                        "description": "The total number of pages available."
                      },
                      "noOfRecords": {
                        "type": "integer",
                        "description": "The total number of records available."
                      }
                    }
                  }
                  }
                }
              },
              "201 ": {
                "description":"Failed to fetch community list",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation."
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to fetch community list."
                        }
                      }
                    }

                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }

                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/activate": {
          "post": {
            "tags": ["Community"],
            "summary": "Activate Community",
            "description": "Activate a community and retrieve updated community information.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community."
                      },
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter communities by alias or name."
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of items to return in the result set."
                      },
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the company associated with the community."
                      }
                    },
                    "required": ["communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Community activated successfully"
                        },
                        "communityList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "companyId": "number",
                              "creator": "number",
                              "community_name": "string",
                              "community_alias": "string",
                              "active": "number",
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "zipcode": "string",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean",
                              "noOfFiles": "number"
                            }
                            
                          }
                        },
                        "totalPageNum": {
                          "type": "integer"
                        },
                        "noOfRecords": {
                          "type": "integer"
                        },
                        "activeCommunities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties":{
                              "id": {
                                "type": "integer"
                              },
                              "companyId":{
                                "type":"integer"
                              },
                              "creator":{
                                "type":"string"
                              },
                              "community_name":{
                                "type": "string"
                              },
                              "community_alias":{
                                "type":"string"
                              },
                              "active":{
                                "type":"integer"
                              },
                              "street":{
                                "type":"string"
                              },
                              "city":{
                                "type":"string"
                              },
                              "state":{
                                "type":"string"
                              },
                              "zipcode":{
                                "type":"integer"
                              },
                              "created":{
                                "type":"object"
                              },
                              "updated":{
                                "type":"object"
                              },
                              "selected":{
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description":"Community activated successfully, but failed the fetch the updated list",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Community activated successfully, but failed the fetch the updated list."
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/deactivate": {
          "post": {
            "tags": ["Community"],
            "summary": "Deactivate Community",
            "description": "Deactivate a community and retrieve updated community information.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community."
                      },
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter communities by alias or name."
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set.",
                        "required": true
                      },
                      "limit": {
                        "type": "integer",
                        "example": 1,
                        "description": "The maximum number of items to return in the result set.",
                        "required": true
                      },
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the company associated with the community."
                      }
                    },
                    "required": ["companyId", "communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Community delactivated successfully"
                        },
                        "communityList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "companyId": "number",
                              "creator": "number",
                              "community_name": "string",
                              "community_alias": "string",
                              "active": "number",
                              "street": "string",
                              "city": "string",
                              "state": "string",
                              "zipcode": "string",
                              "created": "object",
                              "updated": "object",
                              "selected": "boolean",
                              "noOfFiles": "number"
                            }
                          }
                        },
                        "totalPageNum": {
                          "type": "integer"
                        },
                        "noOfRecords": {
                          "type": "integer"
                        },
                        "activeCommunities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties":{
                              "id": {
                                "type": "integer"
                              },
                              "companyId":{
                                "type":"integer"
                              },
                              "creator":{
                                "type":"string"
                              },
                              "community_name":{
                                "type": "string"
                              },
                              "community_alias":{
                                "type":"string"
                              },
                              "active":{
                                "type":"integer"
                              },
                              "street":{
                                "type":"string"
                              },
                              "city":{
                                "type":"string"
                              },
                              "state":{
                                "type":"string"
                              },
                              "zipcode":{
                                "type":"integer"
                              },
                              "created":{
                                "type":"object"
                              },
                              "updated":{
                                "type":"object"
                              },
                              "selected":{
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description":"Community delactivated successfully, but failed the fetch the updated list",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Community delactivated successfully, but failed the fetch the updated list."
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description":"Failed to deactivate community",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to deactivate community"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description":"Admin Access Denied",
                "content":{
                  "application/json":{
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/community/get-active-communities": {
          "post": {
            "tags": ["Community"],
            "summary": "Get Active Community List",
            "description": "Retrieve the list of active communities.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the company."
                      }
                    },
                    "required": ["companyId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "communityList": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties":{
                              "id": {
                                "type": "integer"
                              },
                              "companyId":{
                                "type":"integer"
                              },
                              "creator":{
                                "type":"string"
                              },
                              "community_name":{
                                "type": "string"
                              },
                              "community_alias":{
                                "type":"string"
                              },
                              "active":{
                                "type":"integer"
                              },
                              "street":{
                                "type":"string"
                              },
                              "city":{
                                "type":"string"
                              },
                              "state":{
                                "type":"string"
                              },
                              "zipcode":{
                                "type":"integer"
                              },
                              "created":{
                                "type":"object"
                              },
                              "updated":{
                                "type":"object"
                              },
                              "selected":{
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description":"Failed to fetch communities",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to fetch communities."
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Not a company user",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid compnayId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/create-folder": {
          "post": {
            "tags": ["Documents"],
            "summary": "Create New Folder",
            "description": "Create a new folder and retrieve the updated list of folders and files.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "folderName": {
                        "type": "string",
                        "description": "The name of the folder."
                      },
                      "tooltip": {
                        "type": "string",
                        "description": "A tooltip associated with the folder."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the community to which the folder belongs."
                      }
                    },
                    "required": ["parentId", "communityId", "folderName"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder created successfully"
                        },
                        "filesAndFolders": {
                          "type": "array",
                          "example":[{
                            "id": "number",
                            "parentId": "number",
                            "communityId": "number",
                            "name": "string",
                            "tooltip": "string",
                            "isDefault": "number",
                            "isFile": "number",
                            "created": "object"
                          }]
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder created successfully, but failed to fetch updated list."
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to create the folder"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid parent",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid parentId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/create-file": {
          "post": {
            "summary": "Create Text Document",
            "tags":["Documents"],
            "description": "Upload and analyze a text document.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The name of the file."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the community to which the file belongs."
                      },
                      "htmlString": {
                        "type": "string",
                        "description": "The HTML content of the file."
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the user who created the file."
                      }
                    },
                    "required": ["fileName", "parentId", "communityId", "htmlString", "userId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "File uploaded and analyzed successfully.",
                "content": {
                  "text/plain": {
                    "example": "1&%&File created successfully, File analyzed successfully$"
                  }
                }
              },
              "200 ": {
                "description": "File created but failed to analyze the file.",
                "content": {
                  "text/plain": {
                    "example": "0&%&File created successfully, Failed to analyze the file$"
                  }
                }
              },
              "200  ": {
                "description": "File upload failed, Failed to analyze the file",
                "content": {
                  "text/plain": {
                    "example": "0&%&File upload failed, Failed to analyze the file$"
                  }
                }
              },
              "200   ": {
                "description": "File fileName already exists under current folder",
                "content": {
                  "text/plain": {
                    "example": "0&%&File fileName.html already exists under current folder$"
                  }
                }
              },
              
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid parent",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid parentId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/update-file": {
          "post": {
            "summary": "Update Document",
            "tags":["Documents"],
            "description": "Update an existing document, including file content and analysis.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The name of the file."
                      },
                      "fileId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the file."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the community to which the file belongs."
                      },
                      "htmlString": {
                        "type": "string",
                        "description": "The HTML content of the file."
                      },
                      "userId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the user who created the file."
                      }
                    },
                    "required": ["fileName", "fileId", "parentId", "communityId", "htmlString", "userId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "text/plain": {
                    "example": "1&%&File updated successfully, File analyzed successfully$"
                  }
                }
              },
              "200 ": {
                "description": "Partial Success",
                "content": {
                  "text/plain": {
                    "example": "1&%&File uploaded successfully, Analysing the document...$"
                  }
                }
              },
              "200  ": {
                "description": "File update failed, Failed to analyze the file",
                "content": {
                  "text/plain": {
                    "example": "0&%&File update failed, Failed to analyze the file$"
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid parent",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid parentId provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid file",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid fileId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/profile/get-usage-data": {
          "post": {
            "tags": ["Company Profile"],
            "summary": "Get Company Usage Data",
            "description": "Retrieve storage occupation data and user count for a company.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "companyId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the company."
                      }
                    },
                    "required": ["companyId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "storageOccupationData": {
                          "type": "string"
                        },
                        "userCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401      ": {
                "description": "Company not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid companyId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/get-folder": {
          "post": {
            "tags": ["Documents"],
            "summary": "Get Folder Data",
            "description": "Retrieve data for a specific folder.",
            "security": [{"bearerAuth": []}],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "folderId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the folder."
                      }
                    },
                    "required": ["folderId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "folderData": {
                          "type": "object",
                          "example":{
                            "id": "number",
                            "parentId": "number",
                            "communityId": "number",
                            "name": "string",
                            "tooltip": "string",
                            "isDefault": "number",
                            "isFile": "number",
                            "created": "object"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description": "Bad Request",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/get-file": {
          "post": {
            "tags": ["Documents"],
            "summary": "Get File",
            "description": "Retrieve and serve a specific file.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fileId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the file."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the file belongs."
                      },
                      "fileType": {
                        "type": "string",
                        "example": "docx",
                        "description": "The type of the file.",
                        "enum": ["docx", "doc", "xlsx", "xls", "pdf", "txt"]
                      }
                    },
                    "required": ["fileId", "communityId", "fileType"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "*/*": {}
                }
              },
              "200 ": {
                "description": "Bad Request",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "File not found"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid file type",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid extension provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid file",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid fileId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/search-files-and-folders": {
          "post": {
            "tags": ["Documents"],
            "summary": "Search Files and Folders",
            "description": "Search for files and folders within a community.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter communities by alias or name."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community."
                      }
                    },
                    "required": ["communityId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        },
                        "predecessorFolders": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                      
                    }
                  }
                }
              },
              "201": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/update-folder": {
          "post": {
            "tags": ["Documents"],
            "summary": "Update Folder Data",
            "description": "Update folder data and retrieve the updated list of files and folders.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "folderId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the folder."
                      },
                      "folderName": {
                        "type": "string",
                        "description": "The name of the folder."
                      },
                      "folderDescription": {
                        "type": "string",
                        "description": "The description of the folder."
                      },
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter folders by name or description."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the folder belongs."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      }
                    },
                    "required": ["folderName", "communityId", "parentId", "folderId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder updated successfully"
                        },
                        "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        },
                        "predecessFolders": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Success (when no search string)",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder updated successfully"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description": "Failed to fetch updated data",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message":{
                          "type": "string",
                          "example": "Folder updated successfully, but failed to fetch the updated data"
                        }
                      }
                    }
                  }
                }
              },
              "201   ": {
                "description": "Failed to update the folder",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message":{
                          "type": "string",
                          "example": "Failed to update the folder"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid folder",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid folderId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/update-filename": {
          "post": {
            "tags": ["Documents"],
            "summary": "Update File Name",
            "description": "Update filename for the HTML file.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fileId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the file."
                      },
                      "fileName": {
                        "type": "string",
                        "description": "The name of the folder."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the folder belongs."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      }
                    },
                    "required": ["fileName", "communityId", "parentId", "fileId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "message": {
                          "type": "string",
                          "example": "Filename updated successfully"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "New name is same as old name",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Old filename is same as new filename"
                        }
                      }
                    }
                  }
                }
              },
              "200  ": {
                "description": "Filename already exists",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message": {
                          "type": "string",
                          "example": "Filename already exists under the parent"
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description": "Failed to update filename",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message":{
                          "type": "string",
                          "example": "Failed to update the filename"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid file",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid fileId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/delete-folder": {
          "post": {
            "tags": ["Documents"],
            "summary": "Delete Folder",
            "description": "Delete a folder and retrieve the updated list of files and folders.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "folderId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the folder."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the folder belongs."
                      },
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter folders by name or description."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      }
                    },
                    "required": ["communityId", "parentId", "folderId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder deleted successfully"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        },
                        "predecessFolders": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Folder deleted successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example": "Folder deleted successfully"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "description": "Failed to delete folder",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message":{
                          "type": "string",
                          "example":"Failed to delete folder"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid folder",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid folderId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/delete-file": {
          "post": {
            "tags": ["Documents"],
            "summary": "Delete File",
            "description": "Delete a file and retrieve the updated list of files and folders.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fileId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the file."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the file belongs."
                      },
                      "searchString": {
                        "type": "string",
                        "description": "Optional. Search string to filter files by name or description."
                      },
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent folder. Set to null if there is no parent folder."
                      }
                    },
                    "required": ["communityId", "fileId", "parentId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example":"File deleted successfully"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        },
                        "predecessFolders": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Success (no search string)",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string",
                          "example":"File deleted successfully"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "message":{
                          "type":"string",
                          "example":"Failed to delete file"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid file",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid fileId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/get-child-folders": {
          "post": {
            "tags": ["Documents"],
            "summary": "Get Child Folders and Files",
            "description": "Retrieve child folders and files of a parent folder and get predecessor folders.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "parentId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier of the parent item. Set to null if there is no parent."
                      },
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community to which the item belongs."
                      }
                    },
                    "required": ["communityId", "parentId"]
                  }
                }                
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        },
                        "predecessorFolders": {
                          "type": "array",
                          "example":[
                            {
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Invalid parent",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid parentId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/file-manager/get-root-folders": {
          "post": {
            "tags": ["Documents"],
            "summary": "Get Root Folders for Community",
            "description": "Retrieve root folders for a community.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityId": {
                        "type": "integer",
                        "example": 1,
                        "description": "The unique identifier for the community."
                      }
                    },
                    "required": ["communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                       "filesAndFolders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "example":{
                              "id": "number",
                              "parentId": "number",
                              "communityId": "number",
                              "name": "string",
                              "tooltip": "string",
                              "isDefault": "number",
                              "isFile": "number",
                              "created": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description":"No token supplied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied."
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description":"Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/create": {
          "post": {
            "tags": ["Chat"],
            "summary": "Create New Chat",
            "description": "Create a new chat and retrieve chat histories and the active chat ID.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "communityId": {
                        "type": "integer",
                        "description": "ID of the community where the chat is created",
                        "example": 1
                      }
                    },
                    "required": ["communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "userChatHistories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id":{
                                "type":"string"
                              },
                              "userId":{
                                "type":"integer"
                              },
                              "communityId":{
                                "type":"integer"
                              },
                              "name":{
                                "type":"string"
                              },
                              "created":{
                                "type":"object"
                              }
                            }
                          },
                          "description": "Chat histories for the user"
                        },
                        "activeChatId": {
                          "type": "integer",
                          "description": "ID of the active chat created"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Chat history updated successfully, but failed to fetch updated data, please refresh the page",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "description": "Chat history updated successfully, but failed to fetch updated data, please refresh the page"
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description": "Error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/get-histories": {
          "post": {
            "tags": ["Chat"],
            "summary": "Get Chat Histories for User by Community",
            "description": "Retrieve chat histories for a user in a specific community.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "ID of the user for whom chat histories are retrieved",
                        "example": 1
                      },
                      "communityId": {
                        "type": "integer",
                        "description": "ID of the community where chat histories are retrieved",
                        "example": 1
                      }
                    },
                    "required": ["userId", "communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "userChatHistories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id":{
                                "type":"string"
                              },
                              "userId":{
                                "type":"integer"
                              },
                              "communityId":{
                                "type":"integer"
                              },
                              "name":{
                                "type":"string"
                              },
                              "created":{
                                "type":"object"
                              }
                            }
                          },
                          "description": "Chat histories for the user"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Error",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "description": "Error message in case of failure"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/rename": {
          "post": {
            "tags": ["Chat"],
            "summary": "Rename Chat History",
            "description": "Rename a chat history and retrieve updated chat histories.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "chatId": {
                        "type": "integer",
                        "description": "ID of the chat history to be renamed",
                        "example": 1
                      },
                      "newChatName": {
                        "type": "string",
                        "description": "The new name for the chat history"
                      },
                      "communityId": {
                        "type": "integer",
                        "description": "ID of the community where the chat history belongs",
                        "example": 1
                      }
                    },
                    "required": ["chatId", "newChatName", "communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "userChatHistories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id":{
                                "type":"string"
                              },
                              "userId":{
                                "type":"integer"
                              },
                              "communityId":{
                                "type":"integer"
                              },
                              "name":{
                                "type":"string"
                              },
                              "created":{
                                "type":"object"
                              }
                            }
                          },
                          "description": "Chat histories for the user"
                        },
                        "message": {
                          "type": "string",
                          "message": "Chat history updated successfully",
                          "example": "Chat history updated successfully",
                          "description": "Additional message indicating the result of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Chat history updated successfully, but failed to fetch updated data, please refresh the page",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "message": "Chat history updated successfully, but failed to fetch updated data, please refresh the page",
                          "description": "Error message in case of failure"
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description": "Failed to update the chat history",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "message": "Failed to update the chat history",
                          "description": "Error message in case of failure"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid chat details",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chat details provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Chat not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chatId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/delete": {
          "post": {
            "tags": ["Chat"],
            "summary": "Delete Chat History",
            "description": "Delete a chat history and retrieve updated chat histories.",
            "security": [
              {"bearerAuth": []}
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "chatId": {
                        "type": "integer",
                        "description": "ID of the chat history to be deleted",
                        "example": 1
                      },
                      "communityId": {
                        "type": "integer",
                        "description": "ID of the community where the chat history belongs",
                        "example": 1
                      }
                    },
                    "required": ["chatId", "communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "userChatHistories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "userId":{
                                "type":"integer"
                              },
                              "communityId":{
                                "type":"integer"
                              },
                              "name":{
                                "type":"string"
                              },
                              "created":{
                                "type":"object"
                              }
                            }
                          },
                          "description": "Updated chat histories for the user in the community"
                        },
                        "message": {
                          "type": "string",
                          "example": "Chat history deleted successfully",
                          "description": "Additional message indicating the result of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "example": "Chat history deleted successfully, but failed to fetch updated data, please refresh the page",
                          "description": "Error message in case of failure"
                        }
                      }
                    }
                  }
                }
              },
              "201  ": {
                "description": "Failed to delete the chat history",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "example": "Failed to delete the chat history",
                          "description": "Error message in case of failure"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid chat details",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chat details provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Chat not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chatId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/get-messages": {
          "post": {
            "security":[
              {"bearerAuth":[]}
            ],            
            "tags": ["Chat"],
            "summary": "Retrieve Chat Messages",
            "description": "Retrieve chat messages for a specific chat.",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "chatId": {
                        "type": "integer",
                        "description": "ID of the chat for which messages are to be retrieved",
                        "example": 1
                      }
                    },
                    "required":["chatId"]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "chatMessages": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id":{
                                "type":"integer"
                              },
                              "chatId":{
                                "type":"integer"
                              },
                              "message":{
                                "type":"string"
                              },
                              "role":{
                                "type":"string"
                              },
                              "parent":{
                                "type":"string"
                              },
                              "created":{
                                "type":"object"
                              }
                            }
                          },
                          "description": "Chat messages for the specified chat"
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401     ": {
                "description": "Chat not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chatId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/chat/add-message": {
          "post": {
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "tags": ["Chat"],
            "summary": "Add Message to Conversation",
            "description": "Add a message to a chat conversation.",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "chatId": {
                        "type": "integer",
                        "description": "ID of the chat where the message will be added",
                        "example": 1
                      },
                      "message": {
                        "type": "string",
                        "description": "The message content to be added to the conversation"
                      },
                      "communityId": {
                        "type": "integer",
                        "description": "ID of the community where the chat is located",
                        "example": 1
                      }
                    },
                    "required": ["chatId", "message", "communityId"]
                  }
                }                
              }
            },
            "responses": {
              "201": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "object",
                          "properties": {
                            "id":{
                              "type":"integer"
                            },
                            "chatId":{
                              "type":"integer"
                            },
                            "message":{
                              "type":"string"
                            },
                            "source":{
                              "type":"array",
                              "example":[
                                {
                                "fileName": "string"
                                }
                              ]
                            },
                            "role":{
                              "type":"string"
                            },
                            "parent":{
                              "type":"string"
                            },
                            "created":{
                              "type":"object"
                            }
                          },
                          "description": "The added message in the conversation"
                        }
                      }
                    }
                  }
                }
              },
              "201 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401    ": {
                "description": "Invalid chat details",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chat details provided"
                    }
                  }
                }
              },
              "401     ": {
                "description": "Chat not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid chatId provided"
                    }
                  }
                }
              },
              "401      ": {
                "description": "Community not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid communityId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
        "/profile/update": {
          "post": {
            "tags": ["User Profile"],
            "summary": "Update User Profile",
            "description": "Update user profile information including user avatar.",
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "requestBody": {
              "content": {
                "multipart/form-data": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "description": "ID of the user to update the profile",
                        "example": 1
                      },
                      "firstname": {
                        "type": "string",
                        "description": "User's first name"
                      },
                      "lastname": {
                        "type": "string",
                        "description": "User's last name"
                      },
                      "mobileNumber": {
                        "type": "string",
                        "description": "User's mobile number"
                      },
                      "image": {
                        "type": "string",
                        "format": "binary",
                        "description": "User's profile image (avatar) as a binary file"
                      }
                    },
                    "required":[
                      "userId",
                      "firstname",
                      "lastname",
                      "mobileNumber"
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "description": "A message describing the outcome of the operation"
                        },
                        "userData": {
                          "type": "object",
                          "properties":{
                            "id":{
                              "type":"integer"
                            },
                            "firstname":{
                              "type":"string"
                            },
                            "lastname":{
                              "type":"string"
                            },
                            "email":{
                              "type":"string"
                            },
                            "accountStatus":{
                              "type":"boolean"
                            },
                            "mobileNumber":{
                              "type":"integer"
                            },
                            "accountLockStatus":{
                              "type":"boolean"
                            },
                            "avatarName":{
                              "type":"string"
                            },
                            "twoFactorAuth":{
                              "type":"boolean"
                            },
                            "accountBlocked":{
                              "type":"boolean"
                            }
                          },
                          "description": "User's updated profile data"
                        }
                      }
                    }
                  }
                }
              },
              "200 ": {
                "description": "Failure",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false,
                          "description": "Indicates the success of the operation"
                        },
                        "message": {
                          "type": "string",
                          "example": "User profile update failed",
                          "description": "A message describing the failure of the operation"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "No token supplied",
                          "description": "Error message indicating unauthorized access"
                        }
                      }
                    }
                  }
                }
              },
              "401 ": {
                "description": "Token Invalid.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token Invalid"
                        }
                      }
                    }
                  }
                }
              },
              "401  ": {
                "description": "Access Denied",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access Denied"
                        }
                      }
                    }
                  }
                }
              },
              "401      ": {
                "description": "User not exists",
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Invalid userId provided"
                    }
                  }
                }
              },
              "400": {
                "description": "Missing Parameters",
                "content": {
                  "application/json": {
                    "example": {
                      "success": false,
                      "message": "Missing parameters, fill all the required fields"
                    }
                  }
                }
              }
            }
          }
        },
          "/admin/update-profile": {
            "post": {
              "summary": "Update Admin User Profile",
              "tags": ["Admin Dashboard"],
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "multipart/form-data": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "integer",
                          "description": "ID of the user to update the profile",
                          "example": 1
                        },
                        "companyId": {
                          "type": "integer",
                          "description": "ID of the company to update the profile",
                          "example": 1
                        },
                        "firstname": {
                          "type": "string",
                          "description": "Admin user's first name"
                        },
                        "lastname": {
                          "type": "string",
                          "description": "Admin user's last name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Admin user's email"
                        },
                        "mobileNumber": {
                          "type": "integer",
                          "description": "Admin user's mobile number"
                        },
                        "role": {
                          "type": "integer",
                          "description": "Admin user's role",
                          "example": 1
                        },
                        "image": {
                          "type": "string",
                          "format": "binary",
                          "description": "Admin user's profile image (avatar) as a binary file"
                        }
                      },
                      "required":[
                        "userId","companyId","firstname","lastname","email","mobileNumber","role"
                      ]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Indicates the success of the operation"
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the outcome of the operation"
                          },
                          "userData": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "firstname": {
                                "type": "string"
                              },
                              "lastname": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "accountStatus": {
                                "type": "boolean"
                              },
                              "mobileNumber": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "description": "Admin user's role"
                              },
                              "avatarName": {
                                "type": "string"
                              }
                            },
                            "description": "Admin user's updated profile data"
                          }
                        }
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "Successfully updated profile but failed to fetch updated data",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Indicates the success of the operation"
                          },
                          "message": {
                            "type": "string",
                            "example": "Successfully updated profile but failed to fetch updated data",
                            "description": "A message describing the outcome of the operation"
                          },
                          "userData": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "firstname": {
                                "type": "string"
                              },
                              "lastname": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "accountStatus": {
                                "type": "boolean"
                              },
                              "mobileNumber": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "description": "Admin user's role"
                              },
                              "avatarName": {
                                "type": "string"
                              }
                            },
                            "description": "Admin user's updated profile data"
                          }
                        }
                      }
                    }
                  }
                },
                "200   ": {
                  "description": "Successfully updated profile but failed to update role",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Successfully updated profile but failed to update role",
                            "description": "A message describing the outcome of the operation"
                          },
                          "userData": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "firstname": {
                                "type": "string"
                              },
                              "lastname": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "accountStatus": {
                                "type": "boolean"
                              },
                              "mobileNumber": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "description": "Admin user's role"
                              },
                              "avatarName": {
                                "type": "string"
                              }
                            },
                            "description": "Admin user's updated profile data"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Bad Request",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": false,
                            "description": "Indicates the success of the operation"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid request parameters",
                            "description": "A message describing the failure of the operation"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "No token supplied",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Token Invalid",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "Access Denied",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Access Denied",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401   ": {
                  "description": "User not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid userId provided"
                      }
                    }
                  }
                },
                "401    ": {
                  "description": "Company not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid companyId provided"
                      }
                    }
                  }
                },
                "401     ": {
                  "description": "Invalid Role",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid Role Id provided"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "/company/update-profile": {
            "post": {
              "summary": "Update Company Profile",
              "tags": ["Company Profile"],
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "multipart/form-data": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "companyId": {
                          "type": "integer",
                          "description": "ID of the company to update the profile",
                          "example": 1
                        },
                        "phoneNumber": {
                          "type": "integer",
                          "description": "Company's phone number"
                        },
                        "companyName": {
                          "type": "string",
                          "description": "Company name"
                        },
                        "orgType": {
                          "type": "string",
                          "description": "Organization type"
                        },
                        "mailingAddStreetName": {
                          "type": "string",
                          "description": "Mailing address street name"
                        },
                        "mailingAddCityName": {
                          "type": "string",
                          "description": "Mailing address city name"
                        },
                        "mailingAddStateName": {
                          "type": "string",
                          "description": "Mailing address state name"
                        },
                        "mailingAddZip": {
                          "type": "string",
                          "description": "Mailing address ZIP code"
                        },
                        "billingAddStreetName": {
                          "type": "string",
                          "description": "Billing address street name"
                        },
                        "billingAddCityName": {
                          "type": "string",
                          "description": "Billing address city name"
                        },
                        "billingAddStateName": {
                          "type": "string",
                          "description": "Billing address state name"
                        },
                        "billingAddZip": {
                          "type": "integer",
                          "description": "Billing address ZIP code",
                          "example": 12345
                        },
                        "isMailAndBillAddressSame": {
                          "type": "boolean",
                          "description": "Flag indicating if mailing and billing addresses are the same"
                        },
                        "image": {
                          "type": "string",
                          "format": "binary",
                          "description": "Company's logo as a binary file"
                        }
                      },
                      "required": ["companyId", "phoneNumber", "companyName", "orgType", "mailingAddStreetName", "mailingAddCityName", "mailingAddStateName", "mailingAddZip", "billingAddStreetName", "billingAddCityName", "billingAddStateName", "billingAddZip", "isMailAndBillAddressSame"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "description": "Indicates the success of the operation"
                          },
                          "message": {
                            "type": "string",
                            "example":"Company profile updated successfully",
                            "description": "A message describing the outcome of the operation"
                          },
                          "companyData": {
                            "type": "object",
                            "properties": {
                              "companyId": {
                                "type": "integer"
                              },
                              "phoneNumber": {
                                "type": "string"
                              },
                              "companyName": {
                                "type": "string"
                              },
                              "orgType": {
                                "type": "string"
                              },
                              "mailingAddStreetName": {
                                "type": "string"
                              },
                              "mailingAddCityName": {
                                "type": "string"
                              },
                              "mailingAddStateName": {
                                "type": "string"
                              },
                              "mailingAddZip": {
                                "type": "string"
                              },
                              "billingAddStreetName": {
                                "type": "string"
                              },
                              "billingAddCityName": {
                                "type": "string"
                              },
                              "billingAddStateName": {
                                "type": "string"
                              },
                              "billingAddZip": {
                                "type": "string"
                              },
                              "isMailAndBillAddressSame": {
                                "type": "boolean"
                              },
                              "logoName": {
                                "type": "string"
                              }
                            },
                            "description": "Company's updated profile data"
                          }
                        }
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "Failed to updated company profile",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean",
                            "example": false,
                            "description": "Indicates the success of the operation"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to updated company profile",
                            "description": "A message describing the failure of the operation"
                          }
                        }
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "No token supplied",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Token Invalid",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401  ": {
                  "description": "Access Denied",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Access Denied",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401    ": {
                  "description": "Company not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid companyId provided"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
          },
          "/file-manager/upload-file": {
            "post": {
              "summary": "Upload and Analyze Document",
              "tags": ["Documents"],
              "security": [
                {
                  "bearerAuth": []
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "multipart/form-data": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "string",
                          "format": "binary",
                          "description": "Document file to upload and analyze"
                        }
                      },
                      "required": ["file"]
                    }
                  }
                }
              },
              "parameters": [
                {
                  "in": "query",
                  "name": "communityId",
                  "required": true,
                  "schema": {
                    "type": "integer"
                  },
                  "description": "ID of the community where the document is uploaded"
                },
                {
                  "in": "query",
                  "name": "fileName",
                  "required": true,
                  "schema": {
                    "type": "string"
                  },
                  "description": "Name of the File"
                },
                {
                  "in": "query",
                  "name": "parentId",
                  "required": true,
                  "schema": {
                    "type": "integer"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Success",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "1-File uploaded successfully, File analyzed successfully"
                      }
                    }
                  }
                },
                "200  ": {
                  "description": "1&%&File uploaded successfully, Analysing the document...$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "1&%&File uploaded successfully, Analysing the document...$"
                      }
                    }
                  }
                },
                "200   ": {
                  "description": "1&%&File uploaded successfully, Extracting the data from PDF...$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "1&%&File uploaded successfully, Extracting the data from PDF...$"
                      }
                    }
                  }
                },
                "200    ": {
                  "description": "1&%&Data extraction successfull, Analysing the document...$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "1&%&Data extraction successfull, Analysing the document...$"
                      }
                    }
                  }
                },
                "200     ": {
                  "description": "1&%&File uploaded successfully, Analysing the document...$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "1&%&File uploaded successfully, Analysing the document...$"
                      }
                    }
                  }
                },
                "200 ": {
                  "description": "0&%&File upload failed, Invalid file type$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "0&%&File upload failed, Invalid file type$"
                      }
                    }
                  }
                },
                "200      ": {
                  "description": "0&%&File uploaded successfully, Failed to analyze the file$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "0&%&File uploaded successfully, Failed to analyze the file$"
                      }
                    }
                  }
                },
                "200       ": {
                  "description": "0&%&File upload failed, Failed to analyze the file$",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "0&%&File upload failed, Failed to analyze the file$"
                      }
                    }
                  }
                },
                "200        ": {
                  "description": "Filename exists under filename",
                  "content": {
                    "text/plain": {
                      "schema": {
                        "type": "string",
                        "example": "0&%&File name already exists under current folder$"
                      }
                    }
                  }
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "No token supplied",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401 ": {
                  "description": "Token Invalid.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Token Invalid",
                            "description": "Error message indicating unauthorized access"
                          }
                        }
                      }
                    }
                  }
                },
                "401    ": {
                  "description": "Company not exists",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid companyId provided"
                      }
                    }
                  }
                },
                "401     ": {
                  "description": "Invalid Role",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Invalid Role Id provided"
                      }
                    }
                  }
                },
                "400": {
                  "description": "Missing Parameters",
                  "content": {
                    "application/json": {
                      "example": {
                        "success": false,
                        "message": "Missing parameters, fill all the required fields"
                      }
                    }
                  }
                }
              }
            }
          }
        
        
      
      
        
        
        
          
        
        
        











    
          




    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "authorization",
                "description": "For authorization, you shall provide a token in the format: Bearer <api_key>",
                "scheme": "bearer"
            }
        }
    }
      
}
